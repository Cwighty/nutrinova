version: "3.9"
services:
  editor:
    build: .
    user: developer
    container_name: nutrinova-editor
    environment:
      # This is needed to connect to the host's docker daemon for dotnet testcontainers
      - TESTCONTAINERS_HOST_OVERRIDE=host.docker.internal
    volumes:
      - developer_home:/home/developer
      - ../:/app
      - ./.bashrc:/home/developer/.bashrc
      - $HOME/.ssh:/home/developer/.ssh
      # To connect to the host's docker daemon
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /app
    command: tail -f /dev/null

  client:
    container_name: nutrinova-client
    build:
      context: .
    user: developer
    environment:
      - NUTRINOVA_API_URL=http://api:5000
    volumes:
      - ../:/app
    command: >
      sh -c "
        cd nutrinova-ui
        npm i
        npm run dev
      "
    ports:
      - 3000:3000

  api:
    container_name: nutrinova-api
    build:
      context: .
    user: 1000:1000
    volumes:
      - ../:/app/
      - images:/app/images
    working_dir: /app
    environment:
      - DOTNET_URLS=http://+:5000 # by default Dotnet only listens to requests coming from 'localhost' from within the container, adding this will listen outside
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=nutrinovadb;Username=admin;Password=Pleasegivemecoke!
    command: >
      sh -c "
        chown -R developer:developer /app/images
        su developer
        cd nutrinova-api/NutrinovaApi
        dotnet watch run --non-interactive --no-hot-reload
        "
    ports:
      - "5000:5000"

  postgres:
    image: postgres:latest
    container_name: nutrinova-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: nutrinovadb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: Pleasegivemecoke!
    volumes:
      - nutrinova_db_data:/var/lib/postgresql/data
      - ../nutrinova-db/init-scripts:/docker-entrypoint-initdb.d

volumes:
  developer_home:
  nutrinova_db_data:
  images:
